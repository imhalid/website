@tailwind base;
@tailwind components;
@tailwind utilities;
/* @import "./syntax.css"; */

:root {
  --backdrop: hsl(0 0% 60% / 0.12);
  --radius: 14;
  --border: 3;
  --backup-border: var(--backdrop);
  --size: 200;
  --base: 80;
  --spread: 500;
  --outer: 1;
  --border-size: calc(var(--border, 2) * 1px);
  --spotlight-size: calc(var(--size, 150) * 1px);
  --hue: calc(var(--base) + (var(--xp, 0) * var(--spread, 0)));

  --side-initial: polygon(50% 0, 50% 0, 50% 100%, 50% 100%);
  --side-hover: polygon(0 0, 100% 0, 100% 100%, 0 100%);
}

::webkit-scrollbar {
  width: 0px;
  background: transparent; /* make scrollbar transparent */
}

*,
*:after,
*:before {
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  scroll-behavior: smooth;
}

@property --gradient-a {
  syntax: '<color>';
  inherits: false;
  initial-value: #181818;
}
@property --gradient-b {
  syntax: '<color>';
  inherits: false;
  initial-value: #181818;
}

canvas {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: -5;
  pointer-events: none;
}
body {
  margin: 0;
  padding: 0;
  scrollbar-width: thin;
  scrollbar-color: transparent transparent;
}

::-webkit-scrollbar {
  width: 1px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background-color: transparent;
}

::selection {
  background: #b3ff1a;
  color: #000;
}

#pattern {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url('/pattern.svg');
  background-size: cover;
  background-position: top left;
  background-repeat: repeat;
  z-index: -10;
  background-size: 148px 148px;
}

#noise {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url('/nnnoise.svg');
  background-size: cover;
  background-position: top left;
  background-repeat: repeat;
  opacity: 0.2;
  z-index: -10;
  background-size: 248px 248px;
}

.signal {
  width: 15px;
  height: 15px;
  background-color: #45ff1a;
  border-radius: 50%;
  outline: 3px solid #b3ff1a;
  outline-offset: -3px;
  filter: drop-shadow(0px 0px 13.2px rgba(179, 255, 26, 1));
  animation: changeRadius 10s infinite;
}

@keyframes changeRadius {
  0% {
    outline-color: #b3ff1a;
    filter: drop-shadow(0px 0px 13.2px rgba(179, 255, 26, 1));
  }
  50% {
    outline-color: #45ff1a;
    filter: drop-shadow(0px 0px 0px rgba(179, 255, 26, 1));
  }
  100% {
    outline-color: #b3ff1a;
    filter: drop-shadow(0px 0px 13.2px rgba(179, 255, 26, 1));
  }
}

#accept-job {
  /*  needed for firefox to have a valid output */
  --gradient-a: #181818;
  --gradient-b: #111111;
  /**/
  transition: --gradient-a 0.5s, --gradient-b 0.5s;
  transition-timing-function: cubic-bezier(0.1, 0.92, 0.8, 0.79);
  background: linear-gradient(var(--gradient-a), var(--gradient-b));
}

#accept-job:hover {
  --gradient-a: #ffb800;
  --gradient-b: #ff8d07;
}

@keyframes jumbo {
  from {
    background-position: 50% 50%, 50% 50%;
  }
  to {
    background-position: 350% 50%, 350% 50%;
  }
}

.jumbo {
  --stripes: repeating-linear-gradient(
    100deg,
    #fff 0%,
    #fff 7%,
    transparent 10%,
    transparent 12%,
    #fff 16%
  );
  --rainbow: repeating-linear-gradient(
    100deg,
    #fff 10%,
    #948467 15%,
    #fff 20%,
    #948467 25%,
    #fff 30%
  );
  background-image: var(--stripes), var(--rainbow);
  background-size: 300%, 200%;
  background-position: 50% 50%, 50% 50%;
  filter: blur(10px) opacity(50%) saturate(200%);
  mask-image: radial-gradient(ellipse at 100% 0%, black 40%, transparent 70%);
  pointer-events: none;
}

.jumbo::after {
  content: '';
  position: fixed;
  inset: 0;
  background-image: var(--stripes), var(--rainbow);
  background-size: 200%, 100%;
  animation: jumbo 60s linear infinite;
  background-attachment: fixed;
  mix-blend-mode: difference;
}

pre {
  background-color: transparent !important;
  @apply !px-0 rounded-lg;
}

code {
  @apply text-sm md:text-base !leading-loose;
}

code[data-theme*=' '],
code[data-theme*=' '] span {
  color: var(--shiki-light);
  background-color: var(--shiki-light-bg);
}

@media (prefers-color-scheme: dark) {
  code[data-theme*=' '],
  code[data-theme*=' '] span {
    color: var(--shiki-dark);
    background-color: var(--shiki-dark-bg);
  }
}

code[data-line-numbers] {
  display: grid;
  counter-reset: line;
  cursor: text;

  > span {
    border-left-width: 4px;
    padding-left: 0.5rem;
    padding-right: 0.75rem;
    font-size: 14px;
  }

  > span::before {
    margin-right: 0.75rem;
    display: inline-block;
    width: 1rem;
    text-align: right;
    color: rgb(255 255 255 / 0.2);
    content: counter(line);
    counter-increment: line;
  }
  > span:hover {
    background-color: #cbdbff10;
  }
}

figure[data-rehype-pretty-code-figure] {
  overflow: hidden;
  border-radius: 0.5rem;
  background-color: #1a202c;
  padding-bottom: 0.25rem;
  border: 1px solid rgba(254, 202, 202, 0.03);
  box-shadow: inset 0 0 0 1px rgba(254, 202, 202, 0.03);
}

figcaption[data-rehype-pretty-code-title] {
  margin-bottom: 0.25rem;
  border-radius: 0.175rem;
  background-color: #2d3748;
  border: 2px solid rgba(226, 232, 240, 0.03);
  box-shadow: inset 0 0 0 2px rgba(226, 232, 240, 0.03);
  position: relative;
  z-index: 10;
  padding: 0 0.5rem;
  font-family: monospace;
  font-size: 0.75rem;
  color: rgba(202, 212, 254, 0.7);
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
}

pre [data-line] {
  padding: 0 0.5rem;
  border-left-color: transparent;
  border-left-width: 2px;
}

pre [data-highlighted-line] {
  position: relative;
  border-left-color: #3f81f4;
  background-color: #cbdbff10;
  overflow: hidden;
}

pre [data-highlighted-line]::after {
  content: '';
  width: 3px;
  height: 100%;
  background-color: #3f81f4;
  filter: blur(3px);
  border-radius: 0px 2px 2px 0px / 0px 50% 50% 0px;
  /* clip-path: ellipse(6px 100% at 0% 50%); */
  position: absolute;
  inset: 0;
  font-size: 0.75em;
}

/* GLOW */

article {
  width: 720px;
}

.article {
  aspect-ratio: 3 / 4;
  border-radius: calc(var(--radius) * 1px);
  width: 260px;
  position: relative;
  grid-template-rows: 1fr auto;
  box-shadow: 0 1rem 2rem -1rem black;
  padding: 1rem;
  display: grid;
  gap: 1rem;
  backdrop-filter: blur(calc(var(--cardblur, 5) * 1px));
}

[data-glow] {
  background-image: radial-gradient(
    var(--spotlight-size) var(--spotlight-size) at calc(var(--x, 0) * 1px)
      calc(var(--y, 0) * 1px),
    hsl(
      var(--hue, 210) calc(var(--saturation, 100) * 1%)
        calc(var(--lightness, 70) * 1%) / var(--bg-spot-opacity, 0.1)
    ),
    transparent
  );
  background-color: var(--backdrop, transparent);
  background-size: calc(100% + (2 * var(--border-size)))
    calc(100% + (2 * var(--border-size)));
  background-position: 50% 50%;
  background-attachment: fixed;
  border: var(--border-size) solid var(--backup-border);
  position: relative;
}

[data-glow]::before,
[data-glow]::after {
  pointer-events: none;
  content: '';
  position: absolute;
  inset: calc(var(--border-size) * -1);
  border: var(--border-size) solid transparent;
  border-radius: calc(var(--radius) * 1px);
  background-attachment: fixed;
  background-size: calc(100% + (2 * var(--border-size)))
    calc(100% + (2 * var(--border-size)));
  background-repeat: no-repeat;
  background-position: 50% 50%;
  mask: linear-gradient(transparent, transparent), linear-gradient(white, white);
  mask-clip: padding-box, border-box;
  mask-composite: intersect;
}

/* This is the emphasis light */
[data-glow]::before {
  background-image: radial-gradient(
    calc(var(--spotlight-size) * 0.75) calc(var(--spotlight-size) * 0.75) at
      calc(var(--x, 0) * 1px) calc(var(--y, 0) * 1px),
    hsl(
      var(--hue, 210) calc(var(--saturation, 100) * 1%)
        calc(var(--lightness, 50) * 1%) / var(--border-spot-opacity, 1)
    ),
    transparent 100%
  );
  filter: brightness(2);
}
/* This is the spotlight */
[data-glow]::after {
  background-image: radial-gradient(
    calc(var(--spotlight-size) * 0.5) calc(var(--spotlight-size) * 0.5) at
      calc(var(--x, 0) * 1px) calc(var(--y, 0) * 1px),
    hsl(0 100% 100% / var(--border-light-opacity, 1)),
    transparent 100%
  );
}
[data-glow] [data-glow] {
  position: absolute;
  inset: 0;
  will-change: filter;
  opacity: var(--outer, 1);
}
[data-glow] > [data-glow] {
  border-radius: calc(var(--radius) * 1px);
  border-width: calc(var(--border-size) * 20);
  filter: blur(calc(var(--border-size) * 10));
  background: none;
  pointer-events: none;
}
[data-glow] > [data-glow]::before {
  inset: -10px;
  border-width: 10px;
}
[data-glow] [data-glow] {
  border: none;
}
[data-glow] :is(a, button) {
  border-radius: calc(var(--radius) * 1px);
  border: var(--border-size) solid transparent;
}
[data-glow] :is(a, button) [data-glow] {
  background: none;
}
[data-glow] :is(a, button) [data-glow]::before {
  inset: calc(var(--border-size) * -1);
  border-width: calc(var(--border-size) * 1);
}

@keyframes brightness-fade-in {
  0% {
    opacity: 0;
    filter: brightness(1) blur(20px) contrast(1)
  }
  10% {
    opacity: 1;
    filter: brightness(3) blur(5px) contrast(3)
  }
  100% {
    opacity: 1;
    filter: brightness(1) blur(0) contrast(1)
  }
}

@keyframes square-in-top-right {
  from {
    transform: translateY(20%);
    filter: blur(10px);
    clip-path: polygon(50% 0, 50% 0, 50% 100%, 50% 100%);
  }
  to {
    transform: translateY(0);
    filter: blur(0);
    clip-path: polygon(100% 0, 0 0, 0 100%, 100% 100%);
  }
}

.fadeInBrightness {
  animation: square-in-top-right linear forwards;
  animation-timeline: view();
  animation-range-start: cover 0%;
  animation-range-end: entry 100%;
  view-timeline-inset: 30%;
}

.projectImage {
  transition: clip-path 0.2s;
  border-radius: 10px;
  clip-path: var(--side-initial);
}

.projectName:hover  .projectImage {
  clip-path: var(--side-hover);
}

.projectName:hover .projectImage {
  animation: brightness-fade-in 0.5s;
}

.shadow-inner-dark {
  box-shadow: 0px 1px 0px 0px hsla(0,0%,100%,.03) inset,0px 0px 0px 1px hsla(0,0%,100%,.03) inset,0px 0px 0px 1px rgba(0,0,0,.06),0px 2px 2px 0px rgba(0,0,0,.06),0px 4px 4px 0px rgba(0,0,0,.06),0px 8px 8px 0px rgba(0,0,0,.06);
}

.pr-title-bg {
  --line-one: hsl(0, 0%, 7%);
  --line-two:hsl(0, 0%, 8%);
  background: repeating-linear-gradient(
    300deg, 
    var(--line-one), 
    var(--line-one) 10px, 
    var(--line-two) 10px, 
    var(--line-two) 15px);
}

.shadow-pr-true {
  box-shadow: 0px 0px 3px 1px hsla(135, 91%, 47%, 0.3), 
              1px 0px 1px 1px hsla(135, 74%, 21%, 0.8) inset;
}

.shadow-pr-false {
  box-shadow: 0px 0px 3px 1px hsla(0, 91%, 47%, 0.3), 
              1px 0px 1px 1px hsla(0, 74%, 21%, 0.8) inset;
}